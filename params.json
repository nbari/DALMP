{"name":"Dalmp","tagline":"Database Abstraction Layer for MySQL using PHP","body":"DALMP - BETA version (3)\r\n========================\r\n\r\nDatabase Abstraction Layer for MySQL using PHP (version 3)\r\n\r\n0% fat and extremely easy to use, only connect to database when needed.\r\n\r\nhandbook: www.dalmp.com\r\n\r\nDetails\r\n-------\r\n\r\n  * Dependecy Injector (DI) support, load once and trigger when required.\r\n  * Redis.io support.\r\n  * Memcache single or multiple hosts and socket support.\r\n  * APC support (http://pecl.php.net/package/APC).\r\n  * Group caching cache by groups and flush by groups or individual keys.\r\n  * Disk cache support.\r\n  * Prepared statements ready, support dynamic building queries, auto detect types (i,d,s,b).\r\n  * Secure connections with SSL.\r\n  * SQLite3 Encryption (http://sqlcipher.net).\r\n  * Simple store of session on database (mysql/sqlite) or a cache like redis/memcache.\r\n  * Easy to use/install/adapt.\r\n  * Nested Transactions (SAVEPOINT / ROLLBACK TO SAVEPOINT).\r\n  * Support connections via unix_sockets.\r\n  * SQL queues.\r\n  * Export to CSV.\r\n  * Trace/measure everything enabling the debugger by just setting something like $db->debug(1).\r\n  * Works outof the box with Cloud databases like Amazon RDS.\r\n  * Lazy database connection. Connect only when needed.\r\n  * PSR-0 compliance.\r\n\r\n*FreeBSD*\r\nInstall from ports: /usr/ports/databases/dalmp\r\n\r\nSessions\r\n--------\r\n\r\nFor storing PHP sessions on mysql you need to create a table with the following schema\r\n\r\n    CREATE TABLE IF NOT EXISTS `dalmp_sessions` (\r\n    `sid` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '',\r\n    `expiry` int(11) unsigned NOT NULL DEFAULT '0',\r\n    `data` longtext CHARACTER SET utf8 COLLATE utf8_bin,\r\n    `ref` varchar(255) DEFAULT NULL,\r\n    `ts` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,\r\n    PRIMARY KEY (`sid`),\r\n    KEY `index` (`ref`,`sid`,`expiry`)\r\n    ) DEFAULT CHARSET=utf8;\r\n\r\nTests\r\n-----\r\n\r\nFor testing the session_handler that uses mysql you need to edit phpunit.xml\r\nfile and enter your database DSN:\r\n\r\n    cp phpunit.xml.dist phpunit.xml\r\n\r\nEdit the DSN section\r\n\r\n    ...\r\n    <php>\r\n      <var name=\"DSN\" value=\"utf8://root@localhost:3306/dalmp\" />\r\n    </php>\r\n    ...\r\n\r\n\r\nThe DSN format is:\r\n\r\n    DSN format: charset://username:password@host:port/database\r\n    $db = new DALMP\\Database('utf8://user:password@host:3306/your_database');\r\n\r\n\r\nFor testing the database load the world.sql.gz located at the examples dir:\r\n\r\n    gzcat examples/world.sql.gz | mysql -uroot dalmp\r\n\r\nYou can try also with gzip, gunzip, zcat as alternative to gzcat\r\n\r\nThat will load all the world tables into the dalmp database and also create the\r\ndalmp_sessions table.\r\n\r\nFor testing purposes the same DSN (same database) is used when testing sessions\r\nand database, in practice you can have different DSN depending on your\r\nrequirements.\r\n\r\nInstall composer and required packages:\r\n\r\n    curl -sS https://getcomposer.org/installer | php -- --install-dir=bin\r\n\r\nInstall phpunit via composer:\r\n\r\n    ./bin/composer.phar install --dev\r\n\r\nFor example to test only the Cache\\Memcache:\r\n\r\n    ./bin/phpunit --testsuite CacheMemcache --tap -c phpunit.xml\r\n\r\nTo run all the tests:\r\n\r\n    ./bin/phpunit --tap -c phpunit.xml\r\n\r\n\r\nBugs / suggestions / comments\r\n-----------------------------\r\n\r\nIf you found a bug or have any other inquiries please use the the DALMP group at: https://groups.google.com/group/dalmp\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}