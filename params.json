{"name":"Dalmp","tagline":"Database Abstraction Layer for MySQL using PHP","body":"DALMP\r\n=====\r\n\r\n**Database Abstraction Layer for MySQL using PHP**\r\n\r\n0% fat and extremely easy to use. Only connect to database when needed.\r\n\r\nExamples and documentation at: http://docs.dalmp.com\r\n\r\n\r\nClone the repository:\r\n\r\n\r\n   $ git clone git://github.com/nbari/DALMP.git dalmp\r\n\r\n\r\nTo Install visit  http://docs.dalmp.com/en/latest/Install.html\r\n\r\n\r\nDetails\r\n-------\r\n\r\n* [Dependecy Injector](http://docs.dalmp.com/en/latest/DI.html) (DI) support, load once, trigger when required.\r\n* [APC](http://docs.dalmp.com/en/latest/cache/APC.html), [Disk](http://docs.dalmp.com/en/latest/cache/disk.html), [Memcache](http://docs.dalmp.com/en/latest/cache/memcache.html), [Redis.io](http://docs.dalmp.com/en/latest/cache/redis.html>) cache support.\r\n* Group [caching cache](http://docs.dalmp.com/en/latest/cache.html) by groups and flush by groups or individual keys.\r\n* [Prepared statements](http://docs.dalmp.com/en/latest/prepared_statements.html) ready, support dynamic building queries, auto detect types (i,d,s,b).\r\n* Secure connections with [SSL](http://docs.dalmp.com/en/latest/Quickstart.html#ssl).\r\n* [SQLite3 Encryption](http://docs.dalmp.com/en/latest/queue/SQLite.html).\r\n* Simple store of session on database (mysql/sqlite) or a cache like redis/memcache/apc.\r\n* Easy to use/install/adapt.\r\n* Nested [Transactions](http://docs.dalmp.com/en/latest/database/StartTrans.html) (SAVEPOINT / ROLLBACK TO SAVEPOINT).\r\n* Support connections via [unix_sockets](http://docs.dalmp.com/en/latest/Quickstart.html#example-using-a-socket).\r\n* SQL [queues](http://docs.dalmp.com/en/latest/queue.html).\r\n* Export to [CSV](http://docs.dalmp.com/en/latest/database/csv.html).\r\n* Trace/measure everything enabling the debugger by just setting something like [$db->debug(1)](http://docs.dalmp.com/en/latest/database/debug.htm).\r\n* Works out of the box with Cloud databases like [Amazon RDS](http://aws.amazon.com/rds/) or [Google cloud](https://developers.google.com/cloud-sql/).\r\n* Lazy database connection. Connect only when needed.\r\n* [PSR-0](http://www.php-fig.org/psr/psr-0/) compliance.\r\n\r\n\r\nRequirements\r\n------------\r\n\r\n* [PHP](http://www.php.net>) >= 5.4\r\n\r\n* A [MySQL](http://www.mysql.org) server to connect via host or [unix sockets](http://en.wikipedia.org/wiki/Unix_domain_socket).\r\n\r\nTo use the cache features you need either the redis, memcache or APC extensions\r\ncompiled, otherwise disk cache will be used.\r\n\r\n* Redis extension - http://github.com/nicolasff/phpredis\r\n* Memcache PECL extencsion - http://pecl.php.net/package/memcache\r\n* APC PECL extension - http://pecl.php.net/package/APC\r\n\r\nIf you want to store session encrypted then you need SQLite3 Encryption http://sqlcipher.net.\r\n\r\n**DALMP** does not use [PDO](http://www.php.net/pdo), so do not worry if your PHP does not have the pdo\r\nextension.\r\n\r\nOn [FreeBSD](http://www.freebsd.org) you can install **DALMP** from ports: /usr/ports/databases/dalmp\r\n","google":"UA-47179138-1","note":"Don't delete this file! It's used internally to help with page regeneration."}